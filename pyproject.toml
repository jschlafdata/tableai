[tool.poetry]
name = "tableai"
version = "0.0.1"
description = ""
authors = ["Schlafdata <john@schlafdata.com>"]
readme = "README.md"
license = ""

packages = [
    {include = "tableai", from = "core"}
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"

# Core tools dependencies (always included)
PyMuPDF = "1.25.5"
requests = "2.32.3"
json-repair = "0.32.0"
pydantic = "2.9.2"
pyyaml = "6.0.1"
boto3 = "1.38.24"
pytesseract = "0.3.13"
pdf2image = "1.17.0"
dateparser = "1.2.1"


iopath      = { version = ">=0.1.10", optional = true }
pycocotools = { version = ">=2.0.6", optional = true }
layoutparser = { version = ">=0.3.4", optional = true }
fvcore      = { version = ">=0.1.3,<0.1.4", optional = true }

# API/service dependencies (optional)
fastapi = {extras = ["all"], version = "^0.115.4", optional = true}
uvicorn = {extras = ["standard"], version = "^0.29", optional = true}
psycopg2-binary = {version = "2.9.10", optional = true}
scikit-learn = {version = "1.6.0", optional = true}
pydantic-settings = {extras = ["yaml"], version = "2.6.0", optional = true}
psutil = {version = "6.1.0", optional = true}
jinja2 = {version = "3.1.3", optional = true}
pytest = {version = "8.1.1", optional = true}
pytest-mock = {version = "3.14.0", optional = true}
async-openai = {version = "0.0.52", optional = true}
ollama = {version = "0.4.9", optional = true}
sqlmodel = {version = "0.0.24", optional = true}
PyJWT = {version = "2.10.1", optional = true}
google-api-python-client = {version = "2.170.0", optional = true}
bcrypt = {version = "4.3.0", optional = true}
dropbox = {version = "12.0.2", optional = true}
openai = {version = "1.82.1", optional = true}

ipython = {version = "8.34.0", optional = true, markers = "python_version >= '3.10'"}
scipy = {version = "1.15.2", optional = true, markers = "python_version >= '3.10'"}

pillow   = { version = ">=10.0.1", optional = true }
ocrmypdf = { version = ">=16.10.2", optional = true, markers = "python_version >= '3.10'" }
numpy = { version = ">=2.2.1", optional = true, markers = "python_version >= '3.10'" }
pandas = { version = ">=2.2.3", optional = true }

[tool.poetry.extras]
core = ["pillow", "ocrmypdf", "numpy", "pandas", "dateparser", "async-openai", "openai", "ollama"]
detectroncpu = ["fvcore", "iopath", "pycocotools", "layoutparser"]

# Service/API extras
api = [
    "fastapi", "uvicorn", "psycopg2-binary", "sqlmodel", 
    "async-openai", "openai", "PyJWT", "bcrypt"
]

# Data science extras
datascience = ["scipy", "scikit-learn", "dateparser", "psutil"]

# Integration extras  
integrations = [
    "google-api-python-client", "dropbox", "ollama",
    "pydantic-settings", "jinja2"
]

# Development extras
dev = ["pytest", "pytest-mock", "ipython"]

# Full installation (everything)
full = [
    "fastapi", "uvicorn", "psycopg2-binary", "scipy", "scikit-learn", 
    "dateparser", "pydantic-settings", "psutil", "jinja2", "pytest", 
    "pytest-mock", "async-openai", "ollama", "sqlmodel", "PyJWT", 
    "google-api-python-client", "bcrypt", "dropbox", "ipython", "openai"
]

[tool.poetry.plugins."tableai.plugins"]
yolo = "tableai.plugins.yolo"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
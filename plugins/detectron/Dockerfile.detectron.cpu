# ────────────────────────────────────────────────────────────────
# Detectron2 (CPU-only) image with tableai[detectroncpu], Python 3.10
# ────────────────────────────────────────────────────────────────
FROM python:3.10-slim-bullseye

ENV \
    PIP_NO_CACHE_DIR=off \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    FORCE_CPU=1 \
    PORT=8000

# 1) Install apt-level dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        git \
        gcc \
        g++ \
        cmake \
        make \
        poppler-utils \
        tesseract-ocr \
        libmupdf-dev \
        libjpeg-dev \
        zlib1g-dev \
        ghostscript \
        jq \
        curl \
        libgl1-mesa-glx \
        nano && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# 2) Upgrade pip early so that "+cpu" wheels are recognized
RUN python3 -m pip install --upgrade pip setuptools wheel

# 3) Install CPU-only PyTorch 1.13.1 and torchvision 0.14.1
RUN python3 -m pip install --no-cache-dir \
        torch==1.13.1+cpu \
        torchvision==0.14.1+cpu \
        --extra-index-url https://download.pytorch.org/whl/cpu

# 4) Install other core Python dependencies for Detectron2
RUN python3 -m pip install --no-cache-dir \
        fvcore==0.1.5.post20221221 \
        Pillow==9.5.0 \
        pycocotools==2.0.6

# 5) Replace numpy & pandas with the required versions
RUN python3 -m pip uninstall -y numpy pandas && \
    python3 -m pip install --no-cache-dir \
        numpy==1.23.5 \
        pandas==2.0.3 \
        ipython==8.33.0 \
        dateparser==1.2.1 \
        python-multipart==0.0.20

# 6) Install cloudpickle and omegaconf
RUN python3 -m pip install --no-cache-dir \
        cloudpickle==2.2.0 \
        omegaconf==2.3.0

# 7) Install tableai with the detectroncpu extra
RUN python3 -m pip install --no-cache-dir \
    "git+https://github.com/jschlafdata/tableai.git@0.0.1#egg=tableai[detectroncpu]"

# 8) Build & install Detectron2 v0.4 in CPU mode
#    (PIP_NO_BUILD_ISOLATION=1 is required for Detectron2’s custom build)
RUN PIP_NO_BUILD_ISOLATION=1 python3 -m pip install --no-cache-dir --no-deps --no-build-isolation \
    "git+https://github.com/facebookresearch/detectron2.git@v0.4#egg=detectron2"

# 9) Install LayoutParser with OCR support
RUN python3 -m pip install --no-cache-dir \
        layoutparser[ocr]==0.3.4

# 10) Install FastAPI + Uvicorn
RUN python3 -m pip install --no-cache-dir \
        fastapi uvicorn[standard]

# Copy application code into the container
COPY ./plugins/detectron/app /app

# Expose the FastAPI port
EXPOSE $PORT

# Default startup command; wrap in sh -c so $PORT is expanded
CMD ["sh", "-c", "uvicorn main:app --host 0.0.0.0 --port $PORT"]